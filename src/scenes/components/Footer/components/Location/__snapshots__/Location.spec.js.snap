// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Location component must render properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Location
    location={
      Object {
        "address": "test address",
        "name": "test name",
        "postCode": "test post code",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.h3>
          LOCATION
        </styled.h3>,
        <styled.div>
          <styled.a
            href={undefined}
            rel="noopener"
            target="_black"
          >
            <styled.p>
              test name
            </styled.p>
          </styled.a>
          <styled.p>
            test address
          </styled.p>
          <styled.p>
            test post code
          </styled.p>
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "LOCATION",
        },
        "ref": null,
        "rendered": "LOCATION",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.a
              href={undefined}
              rel="noopener"
              target="_black"
            >
              <styled.p>
                test name
              </styled.p>
            </styled.a>,
            <styled.p>
              test address
            </styled.p>,
            <styled.p>
              test post code
            </styled.p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <styled.p>
                test name
              </styled.p>,
              "href": undefined,
              "rel": "noopener",
              "target": "_black",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test name",
              },
              "ref": null,
              "rendered": "test name",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test address",
            },
            "ref": null,
            "rendered": "test address",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test post code",
            },
            "ref": null,
            "rendered": "test post code",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.h3>
            LOCATION
          </styled.h3>,
          <styled.div>
            <styled.a
              href={undefined}
              rel="noopener"
              target="_black"
            >
              <styled.p>
                test name
              </styled.p>
            </styled.a>
            <styled.p>
              test address
            </styled.p>
            <styled.p>
              test post code
            </styled.p>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "LOCATION",
          },
          "ref": null,
          "rendered": "LOCATION",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.a
                href={undefined}
                rel="noopener"
                target="_black"
              >
                <styled.p>
                  test name
                </styled.p>
              </styled.a>,
              <styled.p>
                test address
              </styled.p>,
              <styled.p>
                test post code
              </styled.p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <styled.p>
                  test name
                </styled.p>,
                "href": undefined,
                "rel": "noopener",
                "target": "_black",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "test name",
                },
                "ref": null,
                "rendered": "test name",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test address",
              },
              "ref": null,
              "rendered": "test address",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test post code",
              },
              "ref": null,
              "rendered": "test post code",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
